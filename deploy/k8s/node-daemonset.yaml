apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: cloudstack-csi-node
spec:
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      app.kubernetes.io/name: cloudstack-csi-node
  template:
    metadata:
      labels:
        app.kubernetes.io/name: cloudstack-csi-node
        app.kubernetes.io/part-of: cloudstack-csi-driver
    spec:
      containers:
        - args:
            - -endpoint=$(CSI_ENDPOINT)
            - -cloudstackconfig=/etc/cloudstack-csi-driver/cloudstack.ini
            - -nodeName=$(NODE_NAME)
            - -debug
          env:
            - name: CSI_ENDPOINT
              value: unix:///csi/csi.sock
            - name: NODE_HYPERVISOR
              value: vmware
            - name: NODE_NAME
              valueFrom:
                fieldRef:
                  apiVersion: v1
                  fieldPath: spec.nodeName
          image: registry.puzzle.ch/cschlatter/cloudstack-csi-driver:v1.0.0
          imagePullPolicy: Always
          name: cloudstack-csi-node
          resources: {}
          securityContext:
            allowPrivilegeEscalation: true
            capabilities:
              add:
                - all
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /var/lib/kubelet
              mountPropagation: Bidirectional
              name: kubelet-dir
            - mountPath: /dev
              name: device-dir
            - mountPath: /run/cloud-init/
              name: cloud-init-dir
            - mountPath: /etc/cloudstack-csi-driver
              name: cloudstack-conf
            - mountPath: /sys/class/scsi_host/
              name: scsi-host-dir
            - mountPath: /sys/devices/
              name: scsi-device-dir
        - args:
            - --csi-address=$(ADDRESS)
            - --kubelet-registration-path=$(DRIVER_REG_SOCK_PATH)
            - --v=5
          env:
            - name: ADDRESS
              value: /csi/csi.sock
            - name: DRIVER_REG_SOCK_PATH
              value: /var/lib/kubelet/plugins/csi.cloudstack.apache.org/csi.sock
          image: k8s.gcr.io/sig-storage/csi-node-driver-registrar:v2.0.1
          imagePullPolicy: IfNotPresent
          name: node-driver-registrar
          resources: {}
          securityContext:
            privileged: true
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          volumeMounts:
            - mountPath: /csi
              name: plugin-dir
            - mountPath: /registration
              name: registration-dir
      dnsPolicy: ClusterFirst
      nodeSelector:
        kubernetes.io/os: linux
      restartPolicy: Always
      schedulerName: default-scheduler
      serviceAccount: cloudstack-csi-node
      serviceAccountName: cloudstack-csi-node
      terminationGracePeriodSeconds: 30
      tolerations:
        - effect: NoExecute
          operator: Exists
        - effect: NoSchedule
          operator: Exists
      volumes:
        - hostPath:
            path: /var/lib/kubelet/plugins/csi.cloudstack.apache.org/
            type: DirectoryOrCreate
          name: plugin-dir
        - hostPath:
            path: /var/lib/kubelet
            type: Directory
          name: kubelet-dir
        - hostPath:
            path: /dev
            type: Directory
          name: device-dir
        - hostPath:
            path: /var/lib/kubelet/plugins_registry
            type: Directory
          name: registration-dir
        - hostPath:
            path: /run/cloud-init/
            type: Directory
          name: cloud-init-dir
        - hostPath:
            path: /sys/class/scsi_host/
            type: Directory
          name: scsi-host-dir
        - hostPath:
            path: /sys/devices/
            type: ""
          name: scsi-device-dir
        - name: cloudstack-conf
          secret:
            defaultMode: 420
            secretName: csi-cloudstack-secret
  updateStrategy:
    rollingUpdate:
      maxUnavailable: 1
    type: RollingUpdate
